"""
Random Array Generator Module

This module provides functionality to populate an array with random integers
by utilizing external command-line tools. The module relies on the `shuf` 
command, which is available on Unix-based systems, to generate random integers.

Functions:
    - random_array(arr): Fills an array with random integers between 1 and 20
      by invoking the `shuf` command-line tool.

Requirements:
    - This module requires the `shuf` command to be available, which is typically
      found on Unix-like systems such as Linux and macOS.
    - It uses Python's `subprocess` module to execute external commands.
"""

import subprocess

def random_array(arr):
    """
    Fill an array with random integers using an external command-line tool.

    This function takes an existing list `arr` and replaces each element with a
    random integer generated by invoking the `shuf` command-line tool. The random
    integers are generated in the range of 1 to 20.

    Args:
        arr (list): A list of integers, which will be overwritten with random values.

    Returns:
        list: The modified list with random integers replacing the original elements.

    Example:
        random_array([0, 0, 0])
        [15, 3, 9]

    Notes:
        - Requires the `shuf` command-line tool, available on Unix-based systems.
        - The random numbers generated will be between 1 and 20 inclusive.
        - May raise an error if `shuf` is not available or if the subprocess fails.
    """
    shuffled_num = None
    for i,_ in enumerate(arr):
        shuffled_num = subprocess.run(["shuf", "-i1-20", "-n1"], capture_output=True, check=True)
        arr[i] = int(shuffled_num.stdout)
    return arr
